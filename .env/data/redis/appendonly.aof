*2
$6
SELECT
$1
0
*6
$6
xgroup
$6
create
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$1
$
$8
mkstream
*6
$6
xgroup
$6
create
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$1
$
$8
mkstream
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*6
$6
xgroup
$6
create
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$1
$
$8
mkstream
*6
$6
xgroup
$6
create
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$1
$
$8
mkstream
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
5783c6ee20f9:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
5783c6ee20f9:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*1
$5
MULTI
*1
$4
EXEC
*1
$5
MULTI
*1
$4
EXEC
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*1
$5
MULTI
*1
$4
EXEC
*1
$5
MULTI
*1
$4
EXEC
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*1
$5
MULTI
*1
$4
EXEC
*1
$5
MULTI
*1
$4
EXEC
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*1
$5
MULTI
*1
$4
EXEC
*1
$5
MULTI
*1
$4
EXEC
*2
$6
SELECT
$1
0
*3
$6
script
$4
load
$169
local pttl = redis.call('pttl', KEYS[1])
if pttl > 0 then
	return pttl
else
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[1], 'px', ARGV[2])
	return 0
end
*3
$6
script
$4
load
$154
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('del', KEYS[2])
	redis.call('set', KEYS[1], ARGV[3], 'px', ARGV[2])
	return 1
else
	return 0
end
*3
$6
script
$4
load
$202
if redis.call('get', KEYS[1]) == ARGV[1] then
	redis.call('lpush', KEYS[2], ARGV[1])
	redis.call('pexpire', KEYS[1], ARGV[2])
	redis.call('pexpire', KEYS[2], ARGV[2])
end
return redis.status_reply('OK')
*1
$5
MULTI
*1
$4
EXEC
*1
$5
MULTI
*1
$4
EXEC
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$30
ttn:v3:ns:tasks:downlink:ready
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:input
$2
ns
$14
dc5e122e6f0d:1
*5
$6
xgroup
$11
delconsumer
$47
ttn:v3:ns:application-uplinks:application:ready
$2
ns
$14
dc5e122e6f0d:1
